name: CI

on:
  push:
    branches: [master] # Note: Consider changing 'master' to 'main' if that's your default branch
  pull_request:
  workflow_dispatch:

jobs:
  generate-project: # Renamed the first job
    name: Generate Project from Template
    runs-on: ubuntu-latest

    steps:
      - name: Checkout template repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Cookiecutter
        run: pip install cookiecutter

      - name: Generate project from template
        run: |
          python3 -m cookiecutter . --no-input project_name="test_project" description="Test project" author_name="Test Author" author_email="test@example.com" git_username="testuser"

      - name: Upload generated project artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-project # Name of the artifact
          path: test-project/* # Upload the entire generated directory
          if-no-files-found: error # Fail the job if no files are found
          overwrite: true # Overwrite existing files
          include-hidden-files: true # Include hidden files

  test-generated-project: # New job for testing
    name: Test Generated Project
    needs: generate-project # Depends on the first job
    runs-on: ubuntu-latest

    steps:
      - name: Download generated project artifact
        uses: actions/download-artifact@v4
        with:
          name: generated-project # Must match the upload name
          path: . # Download into a directory named test_project
          

      - name: Set up Python for generated project
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies for generated project
        run: |
          pip install -r requirements.txt
          pip install hatch

      - name: Run Ruff linter
        run: hatch run lint:all

      - name: Run tests with pytest
        run: hatch run test

      - name: Build the package
        run: hatch build

      - name: Install the built package
        run: pip install dist/*.whl

  # Badge job (using shields.io)
  badge:
    name: Test Status Badge
    needs: test-generated-project # Now depends on the second job
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create test badge
        uses: emibcn/badge-action@v2
        with:
          label: 'tests'
          status: ${{ needs.test-generated-project.result }} # Check result of the second job
          color: ${{ needs.test-generated-project.result == 'success' && 'brightgreen' || 'red' }}
          path: test-badge.svg